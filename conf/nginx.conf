worker_processes  2;
pid /var/run/nginx.pid;

error_log  /var/log/nginx.error_log  info;

events {
    worker_connections 2000;
    use epoll;  # Use appropriate event method for your platform
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format main  '$remote_addr - $remote_user [$time_local] '
                     '"$request" $status $bytes_sent '
                     '"$http_referer" "$http_user_agent" '
                     '"$gzip_ratio"';

    access_log   /var/log/nginx.access_log  main;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 75 20;
    client_max_body_size 10m;

    gzip on;
    gzip_min_length 1100;
    gzip_buffers 4 8k;
    gzip_types text/plain;

    server {
        listen 80;

        server_name localhost;

        # Serve frontend static files (React build output)
        location / {
            root /usr/share/nginx/html;
            try_files $uri /index.html;  # Serve index.html if file is not found (single page apps)
        }

        # Proxy API requests to the backend
        location /api/ {
            proxy_pass http://backend:5000;  # Replace with actual backend URL if not using Docker Compose
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        # Optional static asset handling
        location /static/ {
            root /usr/share/nginx/html;
        }

        # Handle 404 errors
        error_page  404  /404.html;

        location = /404.html {
            root /usr/share/nginx/html;
        }
    }
}
